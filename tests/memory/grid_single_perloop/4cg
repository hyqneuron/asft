!Machine 64
!Kernel k
!Param 8 2
!Param 4

//R0: tid * 4
//R1: row size (nid * 4)
//R2,3: input addr
//R4,5: otput addr

	MOV R2, c[0x0][0x20];
	MOV R3, c[0x0][0x24];

//R2 = R2 + (tidx+blockidx*blockDim.x)*4*2*2
	S2R R0, SR_Tid_X;
	S2R R4, SR_CTAid_X;
	IMAD R0, R4, c[0x0][0x8], R0;
	ISCADD R2, R0, R2, 4; //R2 = R2 + bracket * 16

//row size = 2*2*4 * blockDim.x * gridDim.x
	MOV R1, c[0x0][0x8];		//R1 = blockDim.x
	IMUL R1, R1, c[0x0][0x14];	//R1*= gridDim.x
	SHL R1, R1, 4; 			//R1*= 16

	MOV R0, RZ;
!Label LOOP
!Align 0
	IADD R0, R0, 1;
	LD.E.CG.128 R4, [R2];
	NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;
	IADD R2, R2, R1;
	NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;
	ISETP.LT P0, pt, R0, 400;
	NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;
	NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;
	NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;NOP;
	NOP;
	@P0 BRA !LOOP 

	EXIT;

!EndKernel
