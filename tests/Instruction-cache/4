!Machine 64
!Kernel k
!Param 8 2
!Param 4

S2R R0, SR_Tid_X
ISETP.LT P0, pt, R0, 31; //if tidx greater than 31
PSETP.AND P2, pt, !pt, pt;
@!P0 ISETP.EQ P1, pt, R0, 0 //if not greater than 31, then only the first thread should go through
@!P0 PSETP.AND P2, pt, P0, P1;
@P2 EXIT; //quit if tidx<31 and tidx!=0
@!P0 BRA !START    //if tidx=0 then go to START. else enter the following loop

MOV32I R0, 290000; //loop 10000 times
!Label LOOP
NOP;NOP;NOP;NOP //4 NOPs
IADD R0, R0, -1;//decrement counter
ISETP.EQ P0, pt, R0, 0; //test
@P0 EXIT;  
BRA !LOOP //continue looping





!Align 0 //align to 0x*0 by padding NOP in front
!Label START
S2R R0, SR_ClockLo
S2R R1, SR_ClockLo
S2R R2, SR_ClockLo
S2R R3, SR_ClockLo
S2R R4, SR_ClockLo
S2R R5, SR_ClockLo
S2R R6, SR_ClockLo
S2R R7, SR_ClockLo
S2R R8, SR_ClockLo
S2R R9, SR_ClockLo
S2R R10, SR_ClockLo
S2R R11, SR_ClockLo
S2R R12, SR_ClockLo
S2R R13, SR_ClockLo
S2R R14, SR_ClockLo
S2R R15, SR_ClockLo
S2R R16, SR_ClockLo
S2R R17, SR_ClockLo
S2R R18, SR_ClockLo
S2R R19, SR_ClockLo
S2R R20, SR_ClockLo
S2R R21, SR_ClockLo
S2R R22, SR_ClockLo
S2R R23, SR_ClockLo
S2R R24, SR_ClockLo
S2R R25, SR_ClockLo
S2R R26, SR_ClockLo
S2R R27, SR_ClockLo
S2R R28, SR_ClockLo
S2R R29, SR_ClockLo
S2R R30, SR_ClockLo
S2R R31, SR_ClockLo
S2R R32, SR_ClockLo
S2R R33, SR_ClockLo
S2R R34, SR_ClockLo
MOV R50, c[0x0][0x20]
MOV R51, c[0x0][0x24]
ST.E [R50], R0
ST.E [R50+0x4], R1
ST.E [R50+0x8], R2
ST.E [R50+0xc], R3
ST.E [R50+0x10], R4
ST.E [R50+0x14], R5
ST.E [R50+0x18], R6
ST.E [R50+0x1c], R7
ST.E [R50+0x20], R8
ST.E [R50+0x24], R9
ST.E [R50+0x28], R10
ST.E [R50+0x2c], R11
ST.E [R50+0x30], R12
ST.E [R50+0x34], R13
ST.E [R50+0x38], R14
ST.E [R50+0x3c], R15
ST.E [R50+0x40], R16
ST.E [R50+0x44], R17
ST.E [R50+0x48], R18
ST.E [R50+0x4c], R19
ST.E [R50+0x50], R20
ST.E [R50+0x54], R21
ST.E [R50+0x58], R22
ST.E [R50+0x5c], R23
ST.E [R50+0x60], R24
ST.E [R50+0x64], R25
ST.E [R50+0x68], R26
ST.E [R50+0x6c], R27
ST.E [R50+0x70], R28
ST.E [R50+0x74], R29
ST.E [R50+0x78], R30
ST.E [R50+0x7c], R31
ST.E [R50+0x80], R32
ST.E [R50+0x84], R33
ST.E [R50+0x88], R34

EXIT
!EndKernel

