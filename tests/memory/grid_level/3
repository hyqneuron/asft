!Machine 64
!Kernel k
!Param 8 2
!Param 4

//Read memory into a lot of rows
//R0: tid * 4
//R1: row size (nid * 4)
//R2,3: input addr

MOV R2, c[0x0][0x20];
MOV R3, c[0x0][0x24];

S2R R0, SR_Tid_X;
ISCADD R2, R0, R2, 2; //R2 = R2 + tid * 4
MOV R1, c[0x0][0x8];
SHL R1, R1, 2; 		//R1 = nid * 4

IADD R4, R2, R1;
IADD R6, R4, R1;
MOV R5, R3;
MOV R7, R3;
IMUL R1, R1, 3;

MOV R0, RZ;
!Label LOOP
!Align 0
LD.E R8,  [R2]; IADD R2, R2, R1;
LD.E R9,  [R4]; IADD R4, R4, R1;
LD.E R10, [R6]; IADD R6, R6, R1;
LD.E R11, [R2]; IADD R2, R2, R1;
LD.E R12, [R4]; IADD R4, R4, R1;
LD.E R13, [R6]; IADD R6, R6, R1;

IADD R0, R0, 1;

LD.E R14, [R2]; IADD R2, R2, R1;
LD.E R15, [R4]; IADD R4, R4, R1;
LD.E R16, [R6]; IADD R6, R6, R1;
LD.E R17, [R2]; IADD R2, R2, R1;
LD.E R18, [R4]; IADD R4, R4, R1;
LD.E R19, [R6]; IADD R6, R6, R1;

ISETP.LT P0, pt, R0, 1000;

LD.E R20, [R2]; IADD R2, R2, R1;
LD.E R21, [R4]; IADD R4, R4, R1;
LD.E R22, [R6]; IADD R6, R6, R1;
LD.E R23, [R2]; IADD R2, R2, R1;
LD.E R24, [R4]; IADD R4, R4, R1;
LD.E R25, [R6]; IADD R6, R6, R1;
LD.E R26, [R2]; IADD R2, R2, R1;
LD.E R27, [R4]; IADD R4, R4, R1;
LD.E R28, [R6]; IADD R6, R6, R1;
LD.E R29, [R2]; IADD R2, R2, R1;
LD.E R30, [R4]; IADD R4, R4, R1;
LD.E R31, [R6]; IADD R6, R6, R1;
@P0 BRA !LOOP 

EXIT;

!EndKernel
